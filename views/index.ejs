<!DOCTYPE html>
<html>
<head>
  <title>NgoQuang</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
    }
    th, td {
      padding: 8px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }
    .pending { color: yellow; }
    .confirmed { color: green; }
    .cancelled { color: red; }
  </style>
</head>
<body>
  <h1>Hệ Thống Quản Lý Lịch Đặt Chỗ</h1>

  <h2>Đặt Chỗ Mới</h2>
  <form id="reservation-form">
    <label for="customer-name">Customer Name:</label>
    <input type="text" id="customer-name" name="customer-name" required>
    <br>
    <label for="reservation-date">Date:</label>
    <input type="date" id="reservation-date" name="reservation-date" required>
    <br>
    <label for="reservation-time">Time:</label>
    <input type="time" id="reservation-time" name="reservation-time" required>
    <br>
    <button type="submit">Create Reservation</button>
  </form>

  <h2>Danh Sách Đặt Chỗ</h2>
  <table id="reservation-table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Customer Name</th>
        <th>Date</th>
        <th>Time</th>
        <th>Status</th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody>
      <!-- Reservation data will be dynamically added here -->
    </tbody>
  </table>

  <script>
    // Sample data for demonstration
    const reservations = [
      { id: 1, customerName: 'TranChinh', date: '2023-05-15', time: '10:00:00', status: 'Pending' },
      { id: 2, customerName: 'XuanTung', date: '2023-05-16', time: '14:30:00', status: 'Confirmed' },
      { id: 3, customerName: 'HuuLuat', date: '2023-05-17', time: '18:45:00', status: 'Cancelled' }
    ];

    // Function to display reservations in the table
    function displayReservations() {
      const tableBody = document.getElementById('reservation-table').getElementsByTagName('tbody')[0];
      tableBody.innerHTML = '';

      reservations.forEach(reservation => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${reservation.id}</td>
          <td>${reservation.customerName}</td>
          <td>${reservation.date}</td>
          <td>${reservation.time}</td>
          <td class="${reservation.status.toLowerCase()}">${reservation.status}</td>
          <td>
            <button class="edit-btn">Edit</button>
            <button class="cancel-btn">Cancel</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    }

    // Display initial reservations
    displayReservations();

    // Function to handle reservation editing
    function editReservation(id) {
      const reservation = reservations.find(r => r.id === id);
      document.getElementById('customer-name').value = reservation.customerName;
      document.getElementById('reservation-date').value = reservation.date;
      document.getElementById('reservation-time').value = reservation.time;
    }

    // Function to handle reservation cancellation
    function cancelReservation(id) {
      const reservation = reservations.find(r => r.id === id);
      reservation.status = 'Cancelled';
      displayReservations();
    }

    // Add event listeners to the table buttons
    const tableBody = document.getElementById('reservation-table').getElementsByTagName('tbody')[0];
    tableBody.addEventListener('click', (event) => {
      if (event.target.classList.contains('edit-btn')) {
        const id = parseInt(event.target.closest('tr').children[0].textContent);
        editReservation(id);
      } else if (event.target.classList.contains('cancel-btn')) {
        const id = parseInt(event.target.closest('tr').children[0].textContent);
        cancelReservation(id);
      }
    });

    // Handle new reservation form submission
    document.getElementById('reservation-form').addEventListener('submit', (event) => {
      event.preventDefault();
      const customerName = document.getElementById('customer-name').value;
      const reservationDate = document.getElementById('reservation-date').value;
      const reservationTime = document.getElementById('reservation-time').value;

      // Add new reservation to the data
      reservations.push({
        id: reservations.length + 1,
        customerName,
        date: reservationDate,
        time: reservationTime,
        status: 'Pending' // Default status
      });

      // Clear the form
      document.getElementById('reservation-form').reset();

      // Update the display
      displayReservations();
    });
  </script>
</body>
</html>
